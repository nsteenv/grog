import groovy.io.FileType
import groovy.text.GStringTemplateEngine
import groovy.util.logging.Log4j
import org.asciidoctor.Asciidoctor
import org.asciidoctor.DocumentHeader

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.asciidoctor:asciidoctor-java-integration:0.1.4"
    }
}

task generateTemplates(type: GrogTask) {
    sourceDir file("$project.projectDir/src/grog")
    outputDir file("$project.buildDir/grog")
}

class GrogDocument {
    String name
    String path
    DocumentHeader header
    String body
    GrogDocument[] data

    GrogDocument(String name, String path, DocumentHeader header, String body) {
        this.name = name
        this.path = path
        this.header = header
        this.body = body
    }

    String getTemplateName() {
        return header?.attributes?.type
    }
}

@Log4j
class GrogTask extends DefaultTask {

    @InputDirectory
    File sourceDir

    @OutputDirectory
    File outputDir

    @TaskAction
    void generate() {

        def contentData = []

        File contentDir = new File(sourceDir, "/content")

        contentDir.eachFileRecurse(FileType.FILES) { file ->

            String filePath = file.absolutePath - ~/${contentDir}/ - ~/${file.name}/
            String fileName = file.name - ~/\.[^\.]+$/

            File outputFileDir = new File(outputDir, filePath)
            outputFileDir.mkdirs()

            def doctor = Asciidoctor.Factory.create()
            DocumentHeader header = doctor.readDocumentHeader(file)

            GrogDocument document = new GrogDocument(
                    fileName,
                    filePath,
                    header,
                    doctor.renderFile(file, [attributes: [backend: "html5"]])
            )

            contentData << document
        }

        File templateDir = new File(sourceDir, "/templates")

        contentData.each { GrogDocument document ->

            if (document.templateName != null) {

                File outputFileDir = new File(outputDir, document.path)
                outputFileDir.mkdirs()

                File templateFile = new File(templateDir, "${document.templateName}.html")

                if (templateFile.exists()) {
                    new GStringTemplateEngine()
                            .createTemplate(templateFile)
                            .make([doc: document, data: contentData])
                            .writeTo(new FileWriter(new File(outputFileDir, "${document.name}.html")))
                            .flush()
                } else {
                    log.error("GrogTask: Missing template file ${templateFile.canonicalPath}")
                }
            } else {
                log.error("GrogTask: Missing template name in ${document.path}${document.name}.ad (remember to add :type: tag)")
            }
        }
    }
}